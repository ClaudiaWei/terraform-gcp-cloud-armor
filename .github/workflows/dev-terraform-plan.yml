name: 'dev-terraform-plan'
on:
  pull_request:
    paths:
      - "dev/**"
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.4
    - name: Terraform Init
      id: init
      run: terraform init -backend-config=backend.tfvars -reconfigure
      working-directory: dev
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      working-directory: dev
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false
      continue-on-error: true
      working-directory: dev
    - name: Update Pull Request
      uses: actions/github-script@v6
      env:
        PLAN: "${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`terraform\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1